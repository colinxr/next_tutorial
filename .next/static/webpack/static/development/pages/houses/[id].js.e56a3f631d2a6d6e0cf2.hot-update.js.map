{"version":3,"file":"static/webpack/static/development/pages/houses/[id].js.e56a3f631d2a6d6e0cf2.hot-update.js","sources":["webpack:///./components/DateRangePicker.js"],"sourcesContent":["import { useState } from 'react'\nimport DayPickerInput from 'react-day-picker/DayPickerInput'\nimport DayPicker from 'react-day-picker'\n// import DateUtils from 'react-day-picker/DateUtils'\nimport 'react-day-picker/lib/style.css'\nimport dateFnsFormat from 'date-fns/format'\nimport dateFnsParse from 'date-fns/parse'\n\nconst parseDate = (str, format, locale) => {\n  const parsed = dateFnsParse(str, format, new Date(), { locale })\n  return DayPicker.DateUtils.isDate(parsed) ? parsed : null\n}\n\nconst formatDate = (date, format, locale) =>\n  dateFnsFormat(date, format, { locale })\n\nconst today = new Date()\nconst tomorrow = new Date(today)\ntomorrow.setDate(tomorrow.getDate() + 1)\nconst format = 'dd MMM yyyy'\n\nexport default () => {\n  const [startDate, setStartDate] = useState(today)\n  const [endDate, setEndDate] = useState(tomorrow)\n\n  return (\n    <div className=\"date-range-picker-container\">\n      <div>\n        <label>From: </label>\n        <DayPickerInput \n          formatDate={formatDate}\n          format={format}\n          value={startDate}\n          parseDate={parseDate}\n          placeholder={`${dateFnsFormat(new Date(), format)}`}\n          dayPickerProps={{\n            modifiers: {\n              disabled: {\n                before: new Date()\n              }\n            }\n          }}\n          onDayChange={day => {\n            setStartDate(day)\n          }}\n        />\n      </div>\n      <div>\n        <label>To: </label>\n        <DayPickerInput \n          formatDate={formatDate}\n          format={format}\n          parseDate={parseDate}\n          value={endDate}\n          placeholder={`${dateFnsFormat(new Date(), format)}`}\n          dayPickerProps={{\n            modifiers: {\n              disabled: {\n                before: new Date()\n              }\n            }\n          }}\n          onDayChange={day => {\n            setEndDate(day)\n          }}\n        />\n      </div>\n\n      <style jsx>{`\n        .date-range-picker-container div {\n          display: grid;\n          border: 1px solid #ddd;\n          grid-template-columns: 30% 70%;\n          padding: 10px;\n        }\n        label {\n          padding-top: 10px;\n        }\n      `}</style>\n      <style jsx global>{`\n        .DayPickerInput input {\n          width: 120px;\n          padding: 10px;\n          font-size: 16px;\n        }\n      `}</style>\n    </div>\n  )\n}\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AADA;AAOA;AACA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AADA;AAOA;AACA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8DA;;;;A","sourceRoot":""}