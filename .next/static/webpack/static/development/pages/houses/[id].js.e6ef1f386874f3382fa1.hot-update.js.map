{"version":3,"file":"static/webpack/static/development/pages/houses/[id].js.e6ef1f386874f3382fa1.hot-update.js","sources":["webpack:///./components/DateRangePicker.js"],"sourcesContent":["import { useState } from 'react'\nimport DayPickerInput from 'react-day-picker/DayPickerInput'\nimport 'react-day-picker/lib/style.css'\nimport { DateUtils } from 'react-day-picker'\nimport dateFnsFormat from 'date-fns/format'\nimport dateFnsParse from 'date-fns/parse'\n\nconst parseDate = (str, format, locale) => {\n  const parsed = dateFnsParse(str, format, new Date(), { locale })\n  return DateUtils.isDate(parsed) ? parsed : null\n}\n\nconst formatDate = (date, format, locale) =>\n  dateFnsFormat(date, format, { locale })\n\nconst today = new Date()\nconst tomorrow = new Date(today)\ntomorrow.setDate(tomorrow.getDate() + 1)\nconst format = 'dd MMM yyyy'\n\nconst numberOfNightsBetweenDates = (startDate, endDate) => {\n  const start = new Date(startDate) //clone\n  const end = new Date(endDate) //clone\n  let dayCount = 0\n\n  while (end > start) {\n    dayCount++\n    start.setDate(start.getDate() + 1)\n  }\n\n  return dayCount\n}\n\nexport default () => {\n  const [startDate, setStartDate] = useState(today)\n  const [endDate, setEndDate] = useState(tomorrow)\n\n  return (\n    <div className=\"date-range-picker-container\">\n      <div>\n        <label>From: </label>\n        <DayPickerInput \n          formatDate={formatDate}\n          format={format}\n          value={startDate}\n          parseDate={parseDate}\n          placeholder={`${dateFnsFormat(new Date(), format)}`}\n          dayPickerProps={{\n            modifiers: {\n              disabled: {\n                before: new Date()\n              }\n            }\n          }}\n          onDayChange={day => {\n            setStartDate(day)\n            if (numberOfNightsBetweenDates(day, endDate) < 1) {\n              const newEndDate = new Date(day)\n              newEndDate.setDate(newEndDate.getDate() + 1)\n              setEndDate(newEndDate)\n            }\n          }}\n        />\n      </div>\n      <div>\n        <label>To: </label>\n        <DayPickerInput \n          formatDate={formatDate}\n          format={format}\n          parseDate={parseDate}\n          value={endDate}\n          placeholder={`${dateFnsFormat(new Date(), format)}`}\n          dayPickerProps={{\n            modifiers: {\n              disabled: [\n                startDate,\n                {\n                  before: startDate\n                }\n              ]\n            }\n          }}\n          onDayChange={day => {\n            setEndDate(day)\n          }}\n        />\n      </div>\n\n      <style jsx>{`\n        .date-range-picker-container div {\n          display: grid;\n          border: 1px solid #ddd;\n          grid-template-columns: 30% 70%;\n          padding: 10px;\n        }\n        label {\n          padding-top: 10px;\n        }\n      `}</style>\n      <style jsx global>{`\n        .DayPickerInput input {\n          width: 120px;\n          padding: 10px;\n          font-size: 16px;\n        }\n      `}</style>\n    </div>\n  )\n}\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AADA;AAOA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AADA;AAHA;AADA;AAUA;AACA;AACA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsEA;;;;A","sourceRoot":""}